# coding=utf-8


class LCMapper:
    def __init__(self):
        self.op_sf_dictionary = {713: '00520000002hmQa', 686: '00520000002hmQf',
                                 1465: '00520000002hOQ0', 1454: '00520000002iPe6',
                                 680: '00520000002hmRJ', 708: '00520000002iPeB',
                                 664: '00520000002hmQk', 1442: '00520000002hmQp', 693: '00520000002hmQu',
                                 678: '00520000002iPeG', 665: '00520000002iPeL',
                                 667: '00520000002hOQF', 1470: '00520000002hmQz',
                                 677: '00520000002iPeQ', 1448: '00520000002iPeV',
                                 1433: '00520000002hOPv', 657: '00520000002hmR4',
                                 1653: '00520000002iPea', 1420: '00520000002iPef',
                                 1415: '00520000002iPek', 1523: '00520000002iPfY',
                                 757: '00520000002iPep', 1441: '00520000002hNjP',
                                 699: '00520000002hmRE', 696: '00520000002hmRO',
                                 1533: '00520000002iPeu', 643: '00520000002hOPq',
                                 1438: '00520000002iPez', 1421: '00520000002hmR9', 1410: '00520000002hmRT',
                                 1414: '00520000002hmRd', 1447: '00520000002iPf4',
                                 60: '00520000002hmRi', 1520: '00520000002hmRn',
                                 1394: '00520000002hmRs', 1484: '00520000002hOQA',
                                 1440: '00520000002iPf9', 625: '00520000002iPel',
                                 663: '00520000002hmRx', 1403: '00520000002hmS2',
                                 648: '00520000002iPfE', 647: '00520000002hmSH',
                                 1439: '00520000002iPfO', 469: '00520000002hmSW',
                                 1443: '00520000002hmDR', 624: '00520000002iPfT',
				 1596: '00520000002I4PD'}

    def op_to_sf(self, op_lc):
        return self.op_sf_dictionary[op_lc]

    def sf_to_op(self, sf_lc):
        inv_map = {v: k for k, v in self.op_sf_dictionary.items()}
        return inv_map[sf_lc]
